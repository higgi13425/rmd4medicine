[
["introduction.html", "Introduction", " Introduction Check out first-look.Rmd. "],
["basic-anatomy.html", "Chapter 1 Basic Anatomy", " Chapter 1 Basic Anatomy A plain text file with a special file extension: .Rmd What does plain text mean? Everything you see can be typed with a normal keyboard. This means anyone can read and edit a .Rmd file. What does the file extension do? Aim to build up vocabulary and intuition around (use default output format here, HTML, and knit with button; consider providing a template to use here and publish to RSConnect quick; highlight how chunk naming works like setup chunk and browsability within IDE [ i.e., table of contents on right] plus how fig.path works): metadata (= YAML), ‚Üí either rmarkdown (for params) or pandoc text (= Markdown), [but inline code is processed by rmarkdown r] R code (= knitr), [other code too! Today we use for R, but I do want you to know‚Ä¶] Output (control with knitr code chunk options). Formative assessments focus on ‚Äúif I want to change X, what do I search for?‚Äù Activity: Open a new Rmd file- read through it- knit it. ‚Üí for each activity, do it first (model), then they do (build up muscle memory for knitting bc they‚Äôll have done it like 50 times throughout workshop) start with prewritten script and work from there- fill in‚Ä¶. nice warmup activity- get in groups, introduce, work through script, what does it do? Annotate, narrate. "],
["using-r-markdown-in-rstudio.html", "Chapter 2 Using R Markdown in RStudio", " Chapter 2 Using R Markdown in RStudio Projects Knit button "],
["whole-document-metadata.html", "Chapter 3 Whole document metadata 3.1 All about YAML 3.2 Changing output formats 3.3 Adding output options", " Chapter 3 Whole document metadata You are probably not used to thinking about medical manuscripts as having ‚Äúmetadata‚Äù, but all files have metadata. Some is set for you automatically by your software (right-click on a file on your computer and select ‚ÄúGet Info‚Äù to see some). Others you may set yourself, like in a document‚Äôs filename; think: asd_obesity_2015.Rmd. Other metadata may be present in your directory structure, like: Documents/ ‚îî‚îÄ‚îÄ manuscripts/ ‚îú‚îÄ‚îÄ autism-treatment-network/ ‚îÇ ‚îú‚îÄ‚îÄ asd_aggression_2014.Rmd ‚îÇ ‚îú‚îÄ‚îÄ asd_obesity_2015.Rmd ‚îÇ ‚îî‚îÄ‚îÄ asd_mullen_2019.Rmd So the file asd_obesity_2015.Rmd was my analysis of data from the Autism Treatment Network for a manuscript on obesity we published in 2015. When you start working in R Markdown, we try to store metadata inside the document itself. The place to store it is in what is called the YAML header (sometimes called YAML frontmatter), which is the space at the top of your .Rmd that is fenced in by three dashes as delimiters (---) like this: --- title: A compelling manuscript author: Alison Hill output: html_document --- What kinds of metadata are useful for medical manuscripts? Think about things you may often add to the header of a Word document you plan to share with other people like collaborators: the author the date the document was written (or last updated!) a title (perhaps with a subtitle) to frame what the document is all about for the reader All of these things are ‚Äúkeys‚Äù we can add to an .Rmd document using the YAML header. 3.1 All about YAML YAML stands for ‚ÄúYAML Ain‚Äôt No Markup Language‚Äù, and you are not the only one to read that and think ‚Äúwell, that is not very helpful at all.‚Äù The most important things to know about YAML are that: You can only have one YAML per .Rmd document (meaning, there is only one source of metadata for the file, which makes sense!). The contents of a YAML are formatted as a series of key: value pairs separated by colons; each key on a new line. In the YAML above, the keys are title, author, and output. Indentation matters. Indentation matters. Indentation matters. You can ‚Äúreuse‚Äù the content in your YAML in your text too. For example, using R code, rmarkdown::metadata$title will print: R Markdown for Medicine ‚Ä¶in this text, because it is pulling metadata from our book‚Äôs title set in the YAML. 3.2 Changing output formats Let‚Äôs focus first on the most important key in our YAML above: the output format. R Markdown comes with a suite of possible ‚Äúoutput formats‚Äù built-in. Your turn Change this document‚Äôs output format from html_document to word_document. Save and üß∂ ‚ÄúKnit to Word‚Äù! 3.3 Adding output options In YAML, indentation is used to indicate nesting. Why do you need to indent? Usually, you want to add output options for a given output format. Output options can be set in your YAML, but they must be nested under the output format. The spacing here is critical as you won‚Äôt get an error message when you do it wrong- usually your document will ‚Äúknit‚Äù but silently fail. On the right, I‚Äôve added some options to the html_document format. We can give the document a table of contents, and make it a floating table of contents, by setting both option arguments to true (the default is false). Try it out to see what this looks like. --- title: A compelling manuscript author: Alison Hill output: html_document: toc: true toc_float: true --- Your turn Word documents can have a table of contents too, but not a floating one. Try adding a toc to your word document output. Save and üß∂ ‚ÄúKnit to Word‚Äù! You can see output options for each output format on the R Markdown reference page. For example, here are the options for word documents. When options are set in the YAML, replace = with : with each key-value pair on a new line. Watch your indentation. "],
["add-text-with-markdown.html", "Chapter 4 Add text with Markdown 4.1 Headers 4.2 Text &amp; Images", " Chapter 4 Add text with Markdown 4.1 Headers Headers are useful for organizing your document into sections, and with Markdown formatting you can have up to 6 types/sizes of headers. Use a # symbol before the label to create a new header. # HEADER 1 ## HEADER 2 ### HEADER 3 #### HEADER 4 ##### HEADER 5 ###### HEADER 6 Header 1 Header 2 Header 3 Header 4 Header 5 Header 6 The RStudio IDE has several features that are nice for R Markdown users. One is the drop-down code navigator in the bottom-left of your file editor as shown in Figure 4.1 (from the R for Data Science book). Figure 4.1: RStudio code navigator As you can see, this uses your Markdown headers to allow you to navigate around your .Rmd file. You can also use the RStudio outline pane, as shown in Figure 4.2 (from the RStudio blog). Figure 4.2: RStudio outline pane Your turn Try using the RStudio code navigator or outline pane to see the outline for first_look.Rmd based on the Markdown headers. Use them to navigate to different sections in the document. 4.2 Text &amp; Images Let‚Äôs take a lightly-edited snippet from a blog post originally published on the Huffington Post in 2010, and show it in raw Markdown (L) and rendered (R). # How We Can Save Over 4 Million Children Childhood vaccines are one of the *great triumphs* of modern medicine. Indeed, parents whose children are vaccinated no longer have to worry about their child&#39;s death or disability from: - whooping cough, - polio, - diphtheria, - hepatitis, or - a host of other infections. Vaccines are the **most cost-effective** health care interventions there are... We have three new, extremely effective vaccines to roll out in developing countries: 1. pneumonia 1. rotavirus 1. meningitis A By Ezekiel J. Emanuel, M.D., Ph.D. [Photo:](https://en.wikipedia.org/wiki/Vaccine) Receiving rubella vaccination, Brazil, 2008. ![](http://bit.ly/VaccineBySandraRugio) How We Can Save Over 4 Million Children Childhood vaccines are one of the great triumphs of modern medicine. Indeed, parents whose children are vaccinated no longer have to worry about their child‚Äôs death or disability from: whooping cough, polio, diphtheria, hepatitis, or a host of other infections. Vaccines are the most cost-effective health care interventions there are‚Ä¶ We have three new, extremely effective vaccines to roll out in developing countries: pneumonia rotavirus meningitis A By Ezekiel J. Emanuel, M.D., Ph.D. Photo: Receiving rubella vaccination, Brazil, 2008. Your turn Try using Markdown formatting to add some bold text or italics. If this is easy, try creating numbered and unnumbered lists, or adding links or images. "],
["add-code.html", "Chapter 5 Add code", " Chapter 5 Add code Evaluate code chunks Add chunks (keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I)) Inline code Why name chunks? Your turn Try updating your preferences for the RStudio code outline pane to include all or only named code chunks, if you like! You can also make the document outline show by default every time you open a file. "],
["use-chunk-options.html", "Chapter 6 Use chunk options 6.1 How it all works", " Chapter 6 Use chunk options play with include, echo (change the package loading chunk to include = TRUE) use setup chunks to change all chunk options (fig.path!) 6.1 How it all works "],
["up-rmd.html", "Chapter 7 Uplevel 7.1 Adding output formats 7.2 Adding multiple YAML keys 7.3 Live preview without reknitting 7.4 Beef up your YAML 7.5 Knit with parameters 7.6 Knit from the command line 7.7 Extend your R Markdown 7.8 R Markdown templates 7.9 GitHub", " Chapter 7 Uplevel 7.1 Adding output formats You can also have more than one output format! If no output options need to be specified, the output format needs to be suffixed by default. --- title: A compelling manuscript author: Alison Hill output: word_document: toc: true pdf_document: default --- Your turn Try adding html_document: default as an additional output format. 7.2 Adding multiple YAML keys Sometimes (but only sometimes), you may wish to have multiple items within a single YAML key. Let‚Äôs take the author key for example, because you can have more than one author: --- title: A compelling manuscript author: - Alison Hill - Peter Higgins output: html_document: toc: true toc_float: true --- Your turn Try adding 7.3 Live preview without reknitting Install the xaringan package, which is for making slides using R Markdown. You could use it for this (I do!), but you can just install the package for a single useful Addin that will allow you to live preview any single R Markdown document with an HTML output format as you edit and save the changes. install.packages(&quot;xaringan&quot;) After installing the package, be sure to restart your R session. Then use the Addings drop-down menu in RStudio to ‚Äúturn on‚Äù Infinite Moon Reader. Test it out by opening up first-look.Rmd again, make a change to something, and click the save button in RStudio. Your live preview HTML output document should update immediately. 7.4 Beef up your YAML ymlthis! What happens if you want to add two possible output formats? You use your YAML- check out what happens to your knit button when working in RStudio if you update your YAML to look like this: --- title: &quot;Response and adverse events to chemotherapy: A mock study&quot; author: - &quot;Alison Hill, Ph.D.&quot; - &quot;Peter Higgins, MD, Ph.D.&quot; output: rmarkdown::html_document: default distill::distill_article: default --- TODO: show how to use ymlthis this add these output formats 7.5 Knit with parameters 7.6 Knit from the command line Cover render() here, and how it can override your YAML 7.7 Extend your R Markdown There are multiple R Markdown ‚Äúextension packages‚Äù which (once installed) give you even more output formats to choose from (like dashboards, slide presentations, books, and blogs). The book you are reading is written using the bookdown package, with the bookdown::gitbook output format. Here are some packages you can experiment with to extend the output formats available to you for a single R Markdown document: Package = R Markdown + New output format rmarkdown Bootswatch CSS rmarkdown::html_document flexdashboard flexbox CSS flexdashboard::flex_dashboard xaringan remark.js xaringan::moon_reader distill Distill CSS distill::distill_article pagedown Paged.js / ReLaXedJS pagedown::html_paged pagedown::html_resume + others 7.8 R Markdown templates Use by adding to YAML or knitting at the command line (recommend focusing on beefing up your YAML). rticles any package like rmd4edu tufte::tufte_html distill::distill_article If you want to add an additional output format without output options, then you need specify : default. output: distill::distill_article: toc: true tufte::tufte_html: default 7.9 GitHub "]
]
